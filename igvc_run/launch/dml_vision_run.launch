<!--igvc_run.launch-->
<launch>
    <master auto="start"/>
<!-- =============   bagfiles  ======================= 

<arg name="path" default="$(env HOME)/catkin_ws/rosbags/field1/" />
-->

<!--This line sets the path to the ROS bagfiles to run -->
<arg name="path" default="$(env HOME)/catkin_ws/rosbags/weMadeIt/" />

<!--These are the bag files to run -->
<arg name="enc_raw" default="$(arg path)enc_raw.bag" />
<arg name="gps" default="$(arg path)gps_fix.bag" />
<arg name="imu" default="$(arg path)imudata.bag" />
<arg name="rCamera" default="$(arg path)right_camera.bag" />
<arg name="lCamera" default="$(arg path)left_camera.bag" />

<!-- This line runs all the bag files specified above -->
<node pkg="rosbag" type="play" name="player" output="screen" 
    args=" -l --clock $(arg enc_raw) $(arg gps) $(arg imu) $(arg rCamera) $(arg lCamera)"/>

<!-- =============   TRANSFORMS  ======================= -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne"
        args="0.1 0.0 1.14 0 0 0 1 base_link velodyne 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_gps_frame"
        args="-0.52 0.0 0.92 0 0 0 1 base_link gps_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu_frame"
        args="0 0 0 0 0 0 1 base_link imu_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_left_camera_frame"
        args="0.27 0.06 1.08 0 0.75 0 base_link left_camera_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_right_camera_frame"
        args="0.27 -0.06 1.08 0 0.75 0 base_link right_camera_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_left_wheel_frame"
        args="0.27 0.28 -0.47 0 0 0 1 base_link left_wheel_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_right_wheel_frame"
        args="0.27 -0.28 -0.47 0 0 0 1 base_link right_wheel_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link"
        args="0 0 0.47 0 0 0 1 base_footprint base_link 100" />

  <node pkg="tf" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 1 map odom 100" />

<!--rostopic list
        /camera/left/color  (nul frame)
        /camera/right/color  (nul frame)
        /clock
        /enc_raw (no frame no header)
        /gps/fix (gps_frame)
        /imu_data (imu_frame)
        /rosout
        /rosout_agg
        /tf
TODO get tf for odom to base_footprint
        /camera/left/color
        /camera/right/color
        /clock
        /enc_raw
        /gps/fix
        /imu_data
        /robot_pose_ekf/odom_combined
        /rosout
        /rosout_agg
        /tf
        /tf_static
        /vo


-->
<!--TODO figure out if this is needed:
    <node name="odom_ekf" pkg="igvc_run" type="odom_ekf.py" output="screen"/>
-->

    <node name="gps_conv" pkg="gps_common" type="utm_odometry_node">
      <remap from="odom" to="vo"/>
      <remap from="fix" to="/gps/fix" />
      <param name="rot_covariance" value="99999" />
      <param name="frame_id" value="base_footprint" />
    </node>

  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="utm"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="true"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
  </node>


</launch>

