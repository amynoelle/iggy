#!/usr/bin/env python
PACKAGE = "igvc_image"

import math
#import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("hue_lower", int_t, 0, "Threshold - hue lower", 85, 0, 180)
gen.add("hue_upper", int_t, 0, "Threshold - hue upper", 120, 0, 180)
gen.add("saturation_lower", int_t, 0, "Threshold - saturation lower", 0, 0, 255)
gen.add("saturation_upper", int_t, 0, "Threshold - saturation upper", 25, 0, 255)
gen.add("value_lower", int_t, 0, "Threshold - value lower", 240, 0, 255)
gen.add("value_upper", int_t, 0, "Threshold - value upper", 255, 0, 255)

gen.add("threshold_image_debug", bool_t, 0, "Threshold image diplay window enable", False)

gen.add("blur_kernel_size", int_t, 0, "Kernel size for the bilateral filter", 7, 2, 20)

gen.add("erosion_bool", bool_t, 0, "Erosion morphological filter enable", True)
gen.add("erosion_element", int_t, 0, "Erosion morphological filter kernel type", 2, 0, 2)
gen.add("erosion_size", int_t, 0, "Erosion filter size", 2, 1, 25)

gen.add("dilation_bool", bool_t, 0, "Dilation morphological filter enable", True)
gen.add("dilation_element", int_t, 0, "Dilation morphological filter kernel type", 2, 0, 2)
gen.add("dilation_size", int_t, 0, "Dialtion filter size", 7, 1, 25)

gen.add("morphology_bool", bool_t, 0, "Other morphological filter enable", True)
gen.add("morphology_operation", int_t, 0, "Other morphological filter operation type", 1, 0, 4)
gen.add("morphology_element", int_t, 0, "Other morphological filter kernel type", 2, 0, 2)
gen.add("morphology_size", int_t, 0, "Other morphological filter size", 6, 1, 25)

gen.add("canny_thresh1", double_t, 0, "Other morphological filter operation type", 50, 0, 2480)
gen.add("canny_thresh2", double_t, 0, "Other morphological filter kernel type", 250, 0, 2480)
apeture_size = gen.enum([ gen.const("1", int_t, 1, "size=1"), gen.const("3", int_t, 3, "size=3"), gen.const("5", int_t, 5, "size=5"), gen.const("7", int_t, 7, "size=7") ], "An enum to set canny apeture size")
gen.add("canny_apeture_size", int_t, 0, "Other morphological filter size", 3, 1, 7)

gen.add("hough_rho", double_t, 0, "Hough Rho", 1, 0, 180)
gen.add("hough_theta", double_t, 0, "Hough Theta", math.pi/180, 0, 2*math.pi)
gen.add("hough_threshold", int_t, 0, "Hough Threshold", 50, 0, 2480)
gen.add("hough_min_line_length", double_t, 0, "Hough min line length", 20, 3, 100)
gen.add("hough_min_line_gap", double_t, 0, "Hough min line gap", 10, 0, 100)
    

exit(gen.generate(PACKAGE, "line_filter", "/line_filter/src/line_filter/LineFilter"))
